<?xml version="1.0" encoding="UTF-8"?>

<beans 
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
<context:annotation-config />
<bean id="SubscriptionCacheConfig" class="com.rapidbackend.socialutil.subscription.SubscriptionCacheConfig">
<property name="cacheSize" value="2"></property>
</bean>
<!-- 
<bean id="FollowerListCache" class="com.rapidbackend.util.general.BinaryCache">
<constructor-arg ref="FriendshipCacheConfig">
</constructor-arg>
 -->
<!-- 
<bean id="FollowerListCache" class="com.rapidbackend.util.general.IntCache">
<constructor-arg ref="SubscriptionCacheConfig">
</constructor-arg>
</bean>
 -->


<bean id="FeedCache" class="com.rapidbackend.cache.RedisCache">
<property name="cacheMapper" ref="FeedCacheMapper"></property>
</bean>
<bean id="FeedCacheMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.FeedCacheMapper">
</bean>



<bean id="UserCache" class="com.rapidbackend.cache.RedisCache">
<property name="cacheMapper" ref="UserCacheMapper"></property>
</bean>
<bean id="UserCacheMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.UserCacheMapper">
</bean>

<bean id="SessionCache" class="com.rapidbackend.cache.RedisCache">
<property name="cacheMapper" ref="SessionCacheMapper"></property>
</bean>
<bean id="SessionCacheMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.SessionCacheMapper">
</bean>

<bean id="InboxCache" class="com.rapidbackend.cache.RedisCache">
<property name="cacheMapper" ref="UserInboxMapper"></property>
</bean>
<!-- reconfig this bean if you want to scale redis and map different user's inbox into different redis servers -->
<bean id="UserInboxMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.RedisUserInboxMapper">
</bean>

<bean id="SubscriptionCache" class="com.rapidbackend.cache.RedisCache">
<property name="cacheMapper" ref="SubscriptionCacheMapper"></property>
</bean>
<bean id="SubscriptionCacheMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.SubscriptionCacheMapper">
</bean>


<bean id="RedisCacheConfig" class="com.rapidbackend.cache.RedisCacheConfig">
  <property name="expire" value="true"></property>
</bean>

<!-- reconfig this class if you want to scale redis and map different user's inbox into different redis servers -->
<bean id="RedisCounterLocationMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.RedisCounterLocationMapper">
</bean>

</beans>