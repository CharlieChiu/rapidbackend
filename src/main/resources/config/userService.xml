<?xml version="1.0" encoding="UTF-8"?>
<beans 
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
<context:annotation-config />
<!-- beginning of post queues -->

<!-- keyword 'User+FeedPostQueue' -->
<bean id="UserFeedPostQueue" class="com.rapidbackend.redisqueue.RedisQueue">
  <property name="queueMapper" ref="UserFeedPostQueueMapper"></property>
</bean>

<bean id="UserFeedPostQueueService" class="com.rapidbackend.redisqueue.RedisQueueService">
  <property name="redisQueue" ref="UserFeedPostQueue"></property>
  <property name="queueProcessors">
    <list>
      <ref bean="UserFeedPostQueueProcessor" />
    </list>
  </property>
</bean>

<bean id="UserFeedPostQueueProcessor" class="com.rapidbackend.redisqueue.RedisQueueProcessor">
  <property name="queueName" value="UserFeedPostQueue"></property><!-- queue name in redis instance -->
  <property name="redisConfig" ref="UserFeedPostQueueDB"></property><!-- the redis target name which will direct all the requests to that target -->
  <property name="queueProcessorName" value="UserFeedPostQueueProcessor"></property>
  <property name="handlerBeanName" value="UserFeedPollHandler"></property>
</bean>

<bean id="UserFeedPollHandler" class="com.rapidbackend.socialutil.feeds.FeedPollHandler">
    <property name="subscriptionService" ref="UserSubscriptionService"></property>
    <property name="inboxService" ref="UserInboxService"></property>
    <!-- Don't set pushUserFeeds to true unless you are poll against 'User feeds'-->
    <property name="pushUserFeeds" value="true"></property><!-- Note: we can only set this value to true when we are poll a 'UserFeed' -->
</bean>

<bean id="UserFeedPostQueueMapper" class="com.rapidbackend.redisqueue.SimpleQueueMapper">
    <property name="redisTargetName" value="UserFeedPostQueueDB"></property>
    <property name="queueName" value="UserFeedPostQueue"></property>
</bean>
<!-- End of post queues -->


<bean id="UserInboxConfig" class="com.rapidbackend.socialutil.feeds.RedisInboxConfig">
        <property name="inboxSize" value="2000"></property>
</bean>

<bean id="UserInboxCache" class="com.rapidbackend.cache.RedisCache">
    <property name="cacheMapper" ref="UserInboxMapper"></property>
</bean>

<!-- reconfig this bean if you want to scale redis and map different User's inbox into different redis servers -->
<bean id="UserInboxMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.RedisUserInboxMapper">
    <property name="redisTargetName" value="UserInboxDB"></property>
</bean>

<bean id="UserSubscriptionService" class="com.rapidbackend.socialutil.subscription.SubscriptionService">
        <!-- <property name="subscriptionCache" ref="SubscriptionCache"/> -->
        <property name="subscriptionDao" ref="UsersubscriptionDao"/>
        <property name="feedService" ref="UserFeedService"></property>
        <property name="inboxService" ref="UserInboxService"></property>
        <property name="typeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<bean id="UserInboxService" class="com.rapidbackend.socialutil.feeds.InboxService">
        <property name="feedDao" ref="UserfeedDao"/>
        <property name="inboxConfig" ref="UserInboxConfig"></property>
        <property name="inboxCache" ref="UserInboxCache"></property>
        <property name="subscriptionService" ref="UserSubscriptionService"/>
        <property name="userStatusService" ref="UserStatusService"></property>
        <property name="redisPoolConfigs">
            <list>
                <ref bean="UserInboxDB"/>
            </list>
        </property>
</bean>
<!-- CommentUserFeed begins -->
<bean id="CommentUserFeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId,sessionId,feedId,content"></property>
  <property name="modelName" value="Userfeedcomment"></property>
  <property name="autowireModelPropertyAsParam" value="true"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="CommentUserFeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="CommentUserFeedHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="IncreaseUserFeedCommentCountPipeline"></property>
</bean>

<bean id="CommentUserFeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.CommentFollowableFeedHandler">
    <property name="commentDao" ref="UserfeedcommentDao"></property>
</bean>
<!-- CommentUserFeed ENDs -->
<!-- ReadUserFeedComment begins -->
<bean id="ReadUserFeedCommentSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="feedId"></property>
  <property name="optionalParams" value="start,pageSize"></property>
</bean>

<bean id="ReadUserFeedCommentPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="ReadUserFeedCommentHandler"></ref>
        </list>
    </property>
</bean>
<bean id="ReadUserFeedCommentHandler" class="com.rapidbackend.socialutil.process.handler.feeds.ReadFeedCommentHandler">
    <property name="commentDao" ref="UserfeedcommentDao"></property>
</bean>
<!-- ReadUserFeedComment ENDS -->


<!-- PostUserFeed begins -->
<bean id="PostUserFeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId,followableId,sessionId"></property>
  <property name="autowireModelPropertyAsParam" value="true"></property>
  <property name="modelName" value="UserfeedContent"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="PostUserFeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="PostUserFeedHandler"></ref>
        </list>
    </property>
</bean>

<bean id="PostUserFeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.PostFollowableFeedHandler">
    <property name="feedService" ref="UserFeedService"></property>
</bean>
<!-- PostUserFeed ENDs -->

<!-- RepostUserFeed begins -->
<bean id="RepostUserFeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId,followableId,sessionId,repostToFeedId"></property>
  <property name="optionalParams" value="content"></property>
  <property name="modelName" value="UserfeedContent"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="RepostUserFeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="RepostUserFeedHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="IncreaseUserFeedRepostCountPipeline"></property>
</bean>

<bean id="RepostUserFeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.RepostFollowableFeedHandler">
    <property name="feedService" ref="UserFeedService"></property>
</bean>
<!-- RepostUserFeed ENDs -->
<!-- ReadUserFeedReposts begins -->
<bean id="ReadUserFeedRepostsSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="repostToFeedId"></property>
  <property name="optionalParams" value="start,pageSize"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="ReadUserFeedRepostsPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="GetUserFeedRepostIdHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="GetUserFeedsPipeline"></property>
</bean>

<bean id="GetUserFeedRepostIdHandler" class="com.rapidbackend.socialutil.process.handler.feeds.GetRepostIdHandler">
    <property name="feedDao" ref="UserfeedDao"></property>
    <property name="yield" value="fids"></property>
</bean>
<!-- ReadUserFeedReposts ENDs -->

<!-- increase repost count pipeline BEGINs -->
<bean id="IncreaseUserFeedRepostCountPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="IncreaseUserFeedRepostCountHandler"></ref>
        </list>
    </property>
</bean>

<bean id="IncreaseUserFeedRepostCountHandler" class="com.rapidbackend.core.process.handler.counter.IncreaseCounterHandler">
    <property name="counterConfig" ref="UserFeedRepostCounterConf"></property>
</bean>
<!-- increase repost count pipeline ENDS -->

<!-- increase reply count pipeline BEGINs -->
<bean id="IncreaseUserFeedCommentCountPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="IncreaseUserFeedCommentCountHandler"></ref>
        </list>
    </property>
</bean>

<bean id="IncreaseUserFeedCommentCountHandler" class="com.rapidbackend.core.process.handler.counter.IncreaseCounterHandler">
    <property name="counterConfig" ref="UserFeedCommentCounterConf"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<!-- increase reply count pipeline ENDS -->

<bean id="UserFeedService" class="com.rapidbackend.socialutil.feeds.DefaultFeedService">
    <property name="userDao" ref="UserDao"></property>
    <property name="feedDao" ref="UserfeedDao"></property>
    <property name="postFeedQueueService" ref="UserFeedPostQueueService"></property>
    <property name="feedContentDao" ref="UserfeedcontentDao"></property>
    <property name="followableDomain" value="User"></property>
</bean>


<!-- SubscribeUser begin -->
<bean id="SubscribeUserSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="followable,follower,sessionId"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="SubscribeUserPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyFollowerSessionPipeline"></property><!-- we should insert a session verification pipeline for all commands which requires a session -->
    <property name="handlers">
        <list>
             <ref bean="AddUserFollowerHandler"></ref>
        </list>
    </property>
</bean>
<bean id="AddUserFollowerHandler" class="com.rapidbackend.socialutil.process.handler.subscription.AddFollowerHandler">
    <property name="subscriptionClassName" value="Usersubscription"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="subscriptionService" ref="UserSubscriptionService"></property>
</bean>
<!-- 
<bean id="SubscribeUserHandler" class="com.rapidbackend.socialutil.process.handler.subscription.SubscriptionHandler">
    <property name="dao" ref="UsersubscriptionDao"></property>
    <property name="subscriptionService" ref="UserSubscriptionService"></property>
</bean>
 -->
 
 <!-- subscribeUser end -->
 
 
 <!-- UnsubscribeUser begin -->
<bean id="UnsubscribeUserSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="followable,follower,sessionId"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="UnsubscribeUserPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyFollowerSessionPipeline"></property><!-- we should insert a session verification pipeline for all commands which requires a session -->
    <property name="handlers">
        <list>
             <ref bean="UnsubscribeUserHandler"></ref>
        </list>
    </property>
</bean>

<bean id="UnsubscribeUserHandler" class="com.rapidbackend.socialutil.process.handler.subscription.UnsubscribeHandler">
    <property name="subscriptionClassName" value="Usersubscription"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="subscriptionService" ref="UserSubscriptionService"></property>
    <property name="followableDao" ref="UserDao"></property>
</bean> 
 <!-- UnsubscribeUser end -->


<!-- DeleteUserFeed Pipeline -->
<bean id="DeleteUserFeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="id,sessionId,followableId"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="DeleteUserFeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="DeleteUserFeedHandler" />   
             <ref bean="DeleteCachedUserFeedHandler"/>
        </list>
    </property>
</bean>

<bean id="DeleteUserFeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.DeleteFeedHandler"><!-- delete one Userfeed in database-->
    <property name="feedService" ref="UserFeedService"></property>
    <property name="interceptors">
        <list>
            <ref bean="VerifyUserFeedAuthorInterceptor"/>
        </list>
    </property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
</bean>
<bean id="DeleteCachedUserFeedHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="Userfeedcontent"></property>
</bean>
<bean id="VerifyUserFeedAuthorInterceptor" class="com.rapidbackend.socialutil.process.interceptor.VerifyAuthorInterceptor">
    <property name="modelDao" ref="UserfeedcontentDao"></property>
</bean>
<!-- DeleteUserFeed Pipeline End-->

<!-- UpdateUserFeed Pipeline BEGIN-->
<bean id="UpdateUserFeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="id,sessionId"></property>
  <property name="modelName" value="UserFeedContent"></property>
  <property name="autowireModelPropertyAsParam" value="true"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="UpdateUserFeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="UpdateUserFeedHandler" />   
             <ref bean="UpdateCachedUserFeedHandler"/>
        </list>
    </property>
</bean>
<bean id="UpdateUserFeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.UpdateFeedHandler"><!-- update one Userfeed in database-->
    <property name="feedService" ref="UserFeedService"></property>
    <property name="interceptors">
        <list>
            <ref bean="VerifyUserFeedAuthorInterceptor"/>
        </list>
    </property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
</bean>
<bean id="UpdateCachedUserFeedHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="Userfeedcontent"></property>
</bean>
<!-- UpdateUserFeed ENDS -->

<!-- decrease repost count pipeline BEGINs -->
<bean id="DecreaseUserFeedRepostCountPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="DecreaseUserFeedRepostCountHandler"></ref>
        </list>
    </property>
</bean>

<bean id="DecreaseUserFeedRepostCountHandler" class="com.rapidbackend.core.process.handler.counter.DecreaseCounterHandler">
    <property name="counterConfig" ref="UserFeedRepostCounterConf"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<!-- decrease repost count pipeline ENDS -->

<!-- ReadUserFeedMetadataPipeline BEGINs -->
<bean id="ReadUserFeedMetadataSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="fids"></property>
</bean>
<bean id="ReadUserFeedMetadataPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="ReadUserFeedRepostCounterHandler"></ref>
        </list>
    </property>
</bean>

<bean  id="ReadUserFeedRepostCounterHandler" class="com.rapidbackend.core.process.handler.counter.ReadFeedMetadataHandler">
    <property name="counterConfig" ref="UserFeedRepostCounterConf"></property>
</bean>
<!-- ReadUserFeedMetadataPipeline ENDS -->

<!-- ReadFeedByUser Pipeline -->
<bean id="ReadFeedByUserSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="id"></property>
  <property name="optionalParams" value="start,pageSize"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="ReadFeedByUserPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="GetFeedIdByUserHandler"></ref>   
        </list>
    </property>
    <property name="appendedPipeline" ref="GetUserFeedsPipeline"></property>
</bean>
<bean id="GetFeedIdByUserHandler" class="com.rapidbackend.socialutil.process.handler.feeds.GetFeedIdByFollowableHandler">
    <property name="yield" value="fids"></property>
    <property name="feedDao" ref="UserfeedDao"></property>
</bean>
<!-- ReadFeedByUser Pipeline End-->


<!-- ReadUserFeed Pipeline -->
<bean id="ReadUserFeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="fids"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="ReadUserFeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="GetUserfeedIdHandler"></ref>   
        </list>
    </property>
    <property name="appendedPipeline" ref="GetUserFeedsPipeline"></property>
</bean>
<bean id="GetUserfeedIdHandler" class="com.rapidbackend.socialutil.process.handler.feeds.GetFeedIdHandler">
    <property name="yield" value="fids"></property>
</bean>
<!-- ReadUserFeed Pipeline End-->

<!-- GetFollower start-->
<bean id="GetUserFollowerSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="followable"></property>
  <property name="optionalParams" value="start,pageSize"></property>
</bean>

<bean id="GetUserFollowerPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="GetUserFollowerHandler"></ref>
        </list>
    </property>
</bean>

<bean id="GetUserFollowerHandler" class="com.rapidbackend.socialutil.process.handler.subscription.GetFollowerListHandler">
    <property name="subscriptionClassName" value="Usersubscription"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="subscriptionService" ref="UserSubscriptionService"></property>
    <property name="userDao" ref="UserDao"></property>
</bean>
<!-- GetFollower end -->

<!-- UserFeedTimeline -->
<bean id="UserFeedTimelineSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId"></property>
  <property name="optionalParams" value="start,pageSize"></property>
</bean>
<bean id="UserFeedTimelinePipeline" class="com.rapidbackend.core.process.StandardPipeline">
    <property name="timeout" value="1200000"></property>
    <property name="handlers">
        <list>
            <ref bean="GetUserInboxFeedIdListHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="GetUserFeedsPipeline"></property>
</bean>

<bean  id="GetUserInboxFeedIdListHandler" class="com.rapidbackend.socialutil.process.handler.inbox.GetInboxFeedIdListHandler">
    <property name="inboxService" ref="UserInboxService"></property>
    <property name="yield" value="fids"></property>
</bean>
<!-- UserFeedTimeline end -->


<!-- GetFeeds BEGIN -->
<bean id="GetUserFeedsPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    <property name="handlers">
        <list>
            <ref bean="ReadUserFeedCacheHandler"></ref>
            <ref bean="LockUserFeedCacheHandler"></ref>
            <ref bean="SelectUserFeedFromDbHandler"></ref>
            <ref bean="UpdateUserFeedCacheHandler"/>
            <ref bean="UnLockUserFeedCacheHandler"></ref>
            
            <ref bean="GetAllSeedUserFeedIdHandler"></ref>
            <ref bean="ReadSeedUserFeedCacheHandler"></ref>
            <ref bean="LockSeedUserFeedCacheHandler"></ref>
            <ref bean="SelectSeedUserFeedFromDbHandler"></ref>
            <ref bean="UpdateSeedUserFeedCacheHandler"/>
            <ref bean="UnLockSeedUserFeedCacheHandler"></ref>
            
            <ref bean="GetAllFeedUserIdHandler"></ref>
            <ref bean="ReadUserCacheHandler"></ref>
            <ref bean="LockUserCacheHandler"></ref>
            <ref bean="SelectUserFromDbHandler"></ref>
            <ref bean="UpdateUserCacheHandler"/>
            <ref bean="UnLockUserCacheHandler"></ref>
                        
            <ref bean="MergeUserFeedResultHandler"/>
            
        </list>
    </property>
</bean>
<!-- handlers begin -->
<bean  id="ReadUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.ReadCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="idListParamName" value="fids"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
    <property name="modelClassName" value="Userfeedcontent"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="LockUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.LockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="lockIdListName" value="feedIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="SelectUserFeedFromDbHandler" class="com.rapidbackend.socialutil.process.handler.db.SelectMultipleDbRecordsHandler">
    <property name="dao" ref="UserfeedcontentDao"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
    <property name="grab" value="feeds"></property>
</bean>
<bean  id="UpdateUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="Userfeedcontent"></property>
</bean>
<bean  id="UnLockUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UnlockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="unlockIdListName" value="feedIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="GetAllSeedUserFeedIdHandler" class="com.rapidbackend.socialutil.process.handler.merge.GetAllSeedFeedIdHandler">
    <property name="grab" value="feeds"></property>
    <property name="yield" value="seedFeedId"></property>
</bean>
<bean  id="ReadSeedUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.ReadCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="idListParamName" value="seedFeedId"></property>
    <property name="dBQueryIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="yield" value="seedFeeds"></property><!-- be carefull should not overwrite 'feeds' result -->
    <property name="modelClassName" value="Userfeedcontent"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="LockSeedUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.LockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="lockIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="SelectSeedUserFeedFromDbHandler" class="com.rapidbackend.socialutil.process.handler.db.SelectMultipleDbRecordsHandler">
    <property name="dao" ref="UserfeedcontentDao"></property>
    <property name="dBQueryIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="yield" value="seedFeeds"></property><!-- be carefull should not overwrite 'feeds' result -->
    <property name="grab" value="feeds"></property>
</bean>
<bean  id="UpdateSeedUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelClassName" value="Userfeedcontent"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="UnLockSeedUserFeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UnlockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="unlockIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<bean  id="GetAllFeedUserIdHandler" class="com.rapidbackend.socialutil.process.handler.merge.GetAllFeedUserIdHandler">
    <property name="grab" value="feeds"></property>
    <property name="yield" value="uids"></property>
</bean>
<bean  id="ReadUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.ReadCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="idListParamName" value="uids"></property>
    <property name="dBQueryIdListName" value="userIdsInDbQuery"></property>
    <property name="yield" value="users"></property>
    <property name="modelClassName" value="user"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="LockUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.LockCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="lockIdListName" value="userIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="SelectUserFromDbHandler" class="com.rapidbackend.socialutil.process.handler.db.SelectMultipleDbRecordsHandler">
    <property name="dao" ref="UserDao"></property>
    <property name="dBQueryIdListName" value="userIdsInDbQuery"></property>
    <property name="yield" value="users"></property>
    <property name="grab" value="users"></property>
</bean>
<bean  id="UpdateUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="dBQueryIdListName" value="userIdsInDbQuery"></property>
    <property name="grab" value="users"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="user"></property>
</bean>
<bean  id="UnLockUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.UnlockCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="unlockIdListName" value="userIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<bean  id="MergeUserFeedResultHandler" class="com.rapidbackend.socialutil.process.handler.merge.MergeFeedResultHandler">
    <property name="idListParamName" value="fids"></property><!-- input id list name -->
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<!-- handlers END -->
<!-- GetFeeds END -->


<bean id="UserFeedCommentCounterConf"
        class="com.rapidbackend.core.process.handler.counter.CounterConfig">
        <property name="counterKeyPrefix" value="UserFeedComment"></property>
        <property name="redisCounterTarget" value="metadataCounter"></property>
</bean>
<bean id="UserFeedRepostCounterConf"
        class="com.rapidbackend.core.process.handler.counter.CounterConfig">
        <property name="counterKeyPrefix" value="UserFeedRepost"></property>
        <property name="redisCounterTarget" value="metadataCounter"></property>
</bean>

</beans>