<?xml version="1.0" encoding="UTF-8"?>
<beans 
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
<context:annotation-config />
<!-- beginning of post queues -->

<!-- keyword 'User+FeedPostQueue' -->
<bean id="${followableName}FeedPostQueue" class="com.rapidbackend.redisqueue.RedisQueue">
  <property name="queueMapper" ref="${followableName}FeedPostQueueMapper"></property>
</bean>

<bean id="${followableName}FeedPostQueueService" class="com.rapidbackend.redisqueue.RedisQueueService">
  <property name="redisQueue" ref="${followableName}FeedPostQueue"></property>
  <property name="queueProcessors">
    <list>
      <ref bean="${followableName}FeedPostQueueProcessor" />
    </list>
  </property>
</bean>

<bean id="${followableName}FeedPostQueueProcessor" class="com.rapidbackend.redisqueue.RedisQueueProcessor">
  <property name="queueName" value="${followableName}FeedPostQueue"></property><!-- queue name in redis instance -->
  <property name="redisConfig" ref="${followableName}FeedPostQueueDB"></property><!-- the redis target name which will direct all the requests to that target -->
  <property name="queueProcessorName" value="${followableName}FeedPostQueueProcessor"></property>
  <property name="handlerBeanName" value="${followableName}FeedPollHandler"></property>
</bean>

<bean id="${followableName}FeedPollHandler" class="com.rapidbackend.socialutil.feeds.FeedPollHandler">
    <property name="subscriptionService" ref="${followableName}SubscriptionService"></property>
    <property name="inboxService" ref="${followableName}InboxService"></property>
    <#if followableName=="User">
    <!-- Don't set pushUserFeeds to true unless you are poll against 'User feeds'-->
    <property name="pushUserFeeds" value="true"></property><!-- Note: we can only set this value to true when we are poll a 'UserFeed' -->
    </#if>
</bean>

<bean id="${followableName}FeedPostQueueMapper" class="com.rapidbackend.redisqueue.SimpleQueueMapper">
    <property name="redisTargetName" value="${followableName}FeedPostQueueDB"></property>
    <property name="queueName" value="${followableName}FeedPostQueue"></property>
</bean>
<!-- End of post queues -->


<bean id="${followableName}InboxConfig" class="com.rapidbackend.socialutil.feeds.RedisInboxConfig">
        <property name="inboxSize" value="2000"></property>
</bean>

<bean id="${followableName}InboxCache" class="com.rapidbackend.cache.RedisCache">
    <property name="cacheMapper" ref="${followableName}InboxMapper"></property>
</bean>

<!-- reconfig this bean if you want to scale redis and map different ${followableName}'s inbox into different redis servers -->
<bean id="${followableName}InboxMapper" class="com.rapidbackend.socialutil.sharding.defaultmappers.RedisUserInboxMapper">
    <property name="redisTargetName" value="${followableName}InboxDB"></property>
</bean>

<bean id="${followableName}SubscriptionService" class="com.rapidbackend.socialutil.subscription.SubscriptionService">
        <!-- <property name="subscriptionCache" ref="SubscriptionCache"/> -->
        <property name="subscriptionDao" ref="${followableName}subscriptionDao"/>
        <property name="feedService" ref="${followableName}FeedService"></property>
        <property name="inboxService" ref="${followableName}InboxService"></property>
        <property name="typeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<bean id="${followableName}InboxService" class="com.rapidbackend.socialutil.feeds.InboxService">
        <property name="feedDao" ref="${followableName}feedDao"/>
        <property name="inboxConfig" ref="${followableName}InboxConfig"></property>
        <property name="inboxCache" ref="${followableName}InboxCache"></property>
        <property name="subscriptionService" ref="${followableName}SubscriptionService"/>
        <property name="userStatusService" ref="UserStatusService"></property>
        <property name="redisPoolConfigs">
            <list>
                <ref bean="${followableName}InboxDB"/>
            </list>
        </property>
</bean>
<!-- Comment${followableName}Feed begins -->
<bean id="Comment${followableName}FeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId,sessionId,feedId,content"></property>
  <property name="modelName" value="${followableName}feedcomment"></property>
  <property name="autowireModelPropertyAsParam" value="true"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Comment${followableName}FeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="Comment${followableName}FeedHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="Increase${followableName}FeedCommentCountPipeline"></property>
</bean>

<bean id="Comment${followableName}FeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.CommentFollowableFeedHandler">
    <property name="commentDao" ref="${followableName}feedcommentDao"></property>
</bean>
<!-- Comment${followableName}Feed ENDs -->
<!-- Read${followableName}FeedComment begins -->
<bean id="Read${followableName}FeedCommentSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="feedId"></property>
  <property name="optionalParams" value="start,pageSize"></property>
</bean>

<bean id="Read${followableName}FeedCommentPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Read${followableName}FeedCommentHandler"></ref>
        </list>
    </property>
</bean>
<bean id="Read${followableName}FeedCommentHandler" class="com.rapidbackend.socialutil.process.handler.feeds.ReadFeedCommentHandler">
    <property name="commentDao" ref="${followableName}feedcommentDao"></property>
</bean>
<!-- Read${followableName}FeedComment ENDS -->


<!-- Post${followableName}Feed begins -->
<bean id="Post${followableName}FeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId,followableId,sessionId"></property>
  <property name="autowireModelPropertyAsParam" value="true"></property>
  <property name="modelName" value="${followableName}feedContent"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Post${followableName}FeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="Post${followableName}FeedHandler"></ref>
        </list>
    </property>
</bean>

<bean id="Post${followableName}FeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.PostFollowableFeedHandler">
    <property name="feedService" ref="${followableName}FeedService"></property>
</bean>
<!-- Post${followableName}Feed ENDs -->

<!-- Repost${followableName}Feed begins -->
<bean id="Repost${followableName}FeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId,followableId,sessionId,repostToFeedId"></property>
  <property name="optionalParams" value="content"></property>
  <property name="modelName" value="${followableName}feedContent"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Repost${followableName}FeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="Repost${followableName}FeedHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="Increase${followableName}FeedRepostCountPipeline"></property>
</bean>

<bean id="Repost${followableName}FeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.RepostFollowableFeedHandler">
    <property name="feedService" ref="${followableName}FeedService"></property>
</bean>
<!-- Repost${followableName}Feed ENDs -->
<!-- Read${followableName}FeedReposts begins -->
<bean id="Read${followableName}FeedRepostsSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="repostToFeedId"></property>
  <property name="optionalParams" value="start,pageSize"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Read${followableName}FeedRepostsPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Get${followableName}FeedRepostIdHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="Get${followableName}FeedsPipeline"></property>
</bean>

<bean id="Get${followableName}FeedRepostIdHandler" class="com.rapidbackend.socialutil.process.handler.feeds.GetRepostIdHandler">
    <property name="feedDao" ref="${followableName}feedDao"></property>
    <property name="yield" value="fids"></property>
</bean>
<!-- Read${followableName}FeedReposts ENDs -->

<!-- increase repost count pipeline BEGINs -->
<bean id="Increase${followableName}FeedRepostCountPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Increase${followableName}FeedRepostCountHandler"></ref>
        </list>
    </property>
</bean>

<bean id="Increase${followableName}FeedRepostCountHandler" class="com.rapidbackend.core.process.handler.counter.IncreaseCounterHandler">
    <property name="counterConfig" ref="${followableName}FeedRepostCounterConf"></property>
</bean>
<!-- increase repost count pipeline ENDS -->

<!-- increase reply count pipeline BEGINs -->
<bean id="Increase${followableName}FeedCommentCountPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Increase${followableName}FeedCommentCountHandler"></ref>
        </list>
    </property>
</bean>

<bean id="Increase${followableName}FeedCommentCountHandler" class="com.rapidbackend.core.process.handler.counter.IncreaseCounterHandler">
    <property name="counterConfig" ref="${followableName}FeedCommentCounterConf"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<!-- increase reply count pipeline ENDS -->

<bean id="${followableName}FeedService" class="com.rapidbackend.socialutil.feeds.DefaultFeedService">
    <property name="userDao" ref="UserDao"></property>
    <property name="feedDao" ref="${followableName}feedDao"></property>
    <property name="postFeedQueueService" ref="${followableName}FeedPostQueueService"></property>
    <property name="feedContentDao" ref="${followableName}feedcontentDao"></property>
    <property name="followableDomain" value="${followableName}"></property>
</bean>


<!-- Subscribe${followableName} begin -->
<bean id="Subscribe${followableName}Schema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="followable,follower,sessionId"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Subscribe${followableName}Pipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyFollowerSessionPipeline"></property><!-- we should insert a session verification pipeline for all commands which requires a session -->
    <property name="handlers">
        <list>
             <ref bean="Add${followableName}FollowerHandler"></ref>
        </list>
    </property>
</bean>
<bean id="Add${followableName}FollowerHandler" class="com.rapidbackend.socialutil.process.handler.subscription.AddFollowerHandler">
    <property name="subscriptionClassName" value="${followableName}subscription"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="subscriptionService" ref="${followableName}SubscriptionService"></property>
</bean>
<!-- 
<bean id="SubscribeUserHandler" class="com.rapidbackend.socialutil.process.handler.subscription.SubscriptionHandler">
    <property name="dao" ref="UsersubscriptionDao"></property>
    <property name="subscriptionService" ref="UserSubscriptionService"></property>
</bean>
 -->
 
 <!-- subscribeUser end -->
 
 
 <!-- UnsubscribeUser begin -->
<bean id="Unsubscribe${followableName}Schema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="followable,follower,sessionId"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Unsubscribe${followableName}Pipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyFollowerSessionPipeline"></property><!-- we should insert a session verification pipeline for all commands which requires a session -->
    <property name="handlers">
        <list>
             <ref bean="Unsubscribe${followableName}Handler"></ref>
        </list>
    </property>
</bean>

<bean id="Unsubscribe${followableName}Handler" class="com.rapidbackend.socialutil.process.handler.subscription.UnsubscribeHandler">
    <property name="subscriptionClassName" value="${followableName}subscription"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="subscriptionService" ref="${followableName}SubscriptionService"></property>
    <property name="followableDao" ref="${followableName}Dao"></property>
</bean> 
 <!-- Unsubscribe${followableName} end -->


<!-- Delete${followableName}Feed Pipeline -->
<bean id="Delete${followableName}FeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="id,sessionId,followableId"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Delete${followableName}FeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="Delete${followableName}FeedHandler" />   
             <ref bean="DeleteCached${followableName}FeedHandler"/>
        </list>
    </property>
</bean>

<bean id="Delete${followableName}FeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.DeleteFeedHandler"><!-- delete one ${followableName}feed in database-->
    <property name="feedService" ref="${followableName}FeedService"></property>
    <property name="interceptors">
        <list>
            <ref bean="Verify${followableName}FeedAuthorInterceptor"/>
        </list>
    </property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
</bean>
<bean id="DeleteCached${followableName}FeedHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="${followableName}feedcontent"></property>
</bean>
<bean id="Verify${followableName}FeedAuthorInterceptor" class="com.rapidbackend.socialutil.process.interceptor.VerifyAuthorInterceptor">
    <property name="modelDao" ref="${followableName}feedcontentDao"></property>
</bean>
<!-- Delete${followableName}Feed Pipeline End-->

<!-- Update${followableName}Feed Pipeline BEGIN-->
<bean id="Update${followableName}FeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="id,sessionId"></property>
  <property name="modelName" value="${followableName}FeedContent"></property>
  <property name="autowireModelPropertyAsParam" value="true"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Update${followableName}FeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="insertedPipeline" ref="VerifyAuthorSessionPipeline"></property>
    <property name="handlers">
        <list>
             <ref bean="Update${followableName}FeedHandler" />   
             <ref bean="UpdateCached${followableName}FeedHandler"/>
        </list>
    </property>
</bean>
<bean id="Update${followableName}FeedHandler" class="com.rapidbackend.socialutil.process.handler.feeds.UpdateFeedHandler"><!-- update one ${followableName}feed in database-->
    <property name="feedService" ref="${followableName}FeedService"></property>
    <property name="interceptors">
        <list>
            <ref bean="Verify${followableName}FeedAuthorInterceptor"/>
        </list>
    </property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
</bean>
<bean id="UpdateCached${followableName}FeedHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="${followableName}feedcontent"></property>
</bean>
<!-- Update${followableName}Feed ENDS -->

<!-- decrease repost count pipeline BEGINs -->
<bean id="Decrease${followableName}FeedRepostCountPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Decrease${followableName}FeedRepostCountHandler"></ref>
        </list>
    </property>
</bean>

<bean id="Decrease${followableName}FeedRepostCountHandler" class="com.rapidbackend.core.process.handler.counter.DecreaseCounterHandler">
    <property name="counterConfig" ref="${followableName}FeedRepostCounterConf"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<!-- decrease repost count pipeline ENDS -->

<!-- Read${followableName}FeedMetadataPipeline BEGINs -->
<bean id="Read${followableName}FeedMetadataSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="fids"></property>
</bean>
<bean id="Read${followableName}FeedMetadataPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Read${followableName}FeedRepostCounterHandler"></ref>
        </list>
    </property>
</bean>

<bean  id="Read${followableName}FeedRepostCounterHandler" class="com.rapidbackend.core.process.handler.counter.ReadFeedMetadataHandler">
    <property name="counterConfig" ref="${followableName}FeedRepostCounterConf"></property>
</bean>
<!-- Read${followableName}FeedMetadataPipeline ENDS -->

<!-- ReadFeedBy${followableName} Pipeline -->
<bean id="ReadFeedBy${followableName}Schema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="id"></property>
  <property name="optionalParams" value="start,pageSize"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="ReadFeedBy${followableName}Pipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="GetFeedIdBy${followableName}Handler"></ref>   
        </list>
    </property>
    <property name="appendedPipeline" ref="Get${followableName}FeedsPipeline"></property>
</bean>
<bean id="GetFeedIdBy${followableName}Handler" class="com.rapidbackend.socialutil.process.handler.feeds.GetFeedIdByFollowableHandler">
    <property name="yield" value="fids"></property>
    <property name="feedDao" ref="${followableName}feedDao"></property>
</bean>
<!-- ReadFeedBy${followableName} Pipeline End-->


<!-- Read${followableName}Feed Pipeline -->
<bean id="Read${followableName}FeedSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="fids"></property>
  <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property><!-- this property must be set if autowireModelPropertyAsParam's been set to true -->
</bean>

<bean id="Read${followableName}FeedPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Get${followableName}feedIdHandler"></ref>   
        </list>
    </property>
    <property name="appendedPipeline" ref="Get${followableName}FeedsPipeline"></property>
</bean>
<bean id="Get${followableName}feedIdHandler" class="com.rapidbackend.socialutil.process.handler.feeds.GetFeedIdHandler">
    <property name="yield" value="fids"></property>
</bean>
<!-- Read${followableName}Feed Pipeline End-->

<!-- GetFollower start-->
<bean id="Get${followableName}FollowerSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="followable"></property>
  <property name="optionalParams" value="start,pageSize"></property>
</bean>

<bean id="Get${followableName}FollowerPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    
    <property name="handlers">
        <list>
             <ref bean="Get${followableName}FollowerHandler"></ref>
        </list>
    </property>
</bean>

<bean id="Get${followableName}FollowerHandler" class="com.rapidbackend.socialutil.process.handler.subscription.GetFollowerListHandler">
    <property name="subscriptionClassName" value="${followableName}subscription"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="subscriptionService" ref="${followableName}SubscriptionService"></property>
    <property name="userDao" ref="UserDao"></property>
</bean>
<!-- GetFollower end -->

<!-- ${followableName}FeedTimeline -->
<bean id="${followableName}FeedTimelineSchema" class="com.rapidbackend.core.request.RequestSchema">
  <property name="requiredParams" value="userId"></property>
  <property name="optionalParams" value="start,pageSize"></property>
</bean>
<bean id="${followableName}FeedTimelinePipeline" class="com.rapidbackend.core.process.StandardPipeline">
    <property name="timeout" value="1200000"></property>
    <property name="handlers">
        <list>
            <ref bean="Get${followableName}InboxFeedIdListHandler"></ref>
        </list>
    </property>
    <property name="appendedPipeline" ref="Get${followableName}FeedsPipeline"></property>
</bean>

<bean  id="Get${followableName}InboxFeedIdListHandler" class="com.rapidbackend.socialutil.process.handler.inbox.GetInboxFeedIdListHandler">
    <property name="inboxService" ref="${followableName}InboxService"></property>
    <property name="yield" value="fids"></property>
</bean>
<!-- ${followableName}FeedTimeline end -->


<!-- GetFeeds BEGIN -->
<bean id="Get${followableName}FeedsPipeline" class="com.rapidbackend.core.process.StandardPipeline">
    <property name="handlers">
        <list>
            <ref bean="Read${followableName}FeedCacheHandler"></ref>
            <ref bean="Lock${followableName}FeedCacheHandler"></ref>
            <ref bean="Select${followableName}FeedFromDbHandler"></ref>
            <ref bean="Update${followableName}FeedCacheHandler"/>
            <ref bean="UnLock${followableName}FeedCacheHandler"></ref>
            
            <ref bean="GetAllSeed${followableName}FeedIdHandler"></ref>
            <ref bean="ReadSeed${followableName}FeedCacheHandler"></ref>
            <ref bean="LockSeed${followableName}FeedCacheHandler"></ref>
            <ref bean="SelectSeed${followableName}FeedFromDbHandler"></ref>
            <ref bean="UpdateSeed${followableName}FeedCacheHandler"/>
            <ref bean="UnLockSeed${followableName}FeedCacheHandler"></ref>
            
            <ref bean="GetAllFeedUserIdHandler"></ref>
            <ref bean="ReadUserCacheHandler"></ref>
            <ref bean="LockUserCacheHandler"></ref>
            <ref bean="SelectUserFromDbHandler"></ref>
            <ref bean="UpdateUserCacheHandler"/>
            <ref bean="UnLockUserCacheHandler"></ref>
                        
            <ref bean="Merge${followableName}FeedResultHandler"/>
            
        </list>
    </property>
</bean>
<!-- handlers begin -->
<bean  id="Read${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.ReadCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="idListParamName" value="fids"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
    <property name="modelClassName" value="${followableName}feedcontent"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="Lock${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.LockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="lockIdListName" value="feedIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="Select${followableName}FeedFromDbHandler" class="com.rapidbackend.socialutil.process.handler.db.SelectMultipleDbRecordsHandler">
    <property name="dao" ref="${followableName}feedcontentDao"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="yield" value="feeds"></property>
    <property name="grab" value="feeds"></property>
</bean>
<bean  id="Update${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="feedIdsInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="${followableName}feedcontent"></property>
</bean>
<bean  id="UnLock${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UnlockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="unlockIdListName" value="feedIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="GetAllSeed${followableName}FeedIdHandler" class="com.rapidbackend.socialutil.process.handler.merge.GetAllSeedFeedIdHandler">
    <property name="grab" value="feeds"></property>
    <property name="yield" value="seedFeedId"></property>
</bean>
<bean  id="ReadSeed${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.ReadCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="idListParamName" value="seedFeedId"></property>
    <property name="dBQueryIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="yield" value="seedFeeds"></property><!-- be carefull should not overwrite 'feeds' result -->
    <property name="modelClassName" value="${followableName}feedcontent"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="LockSeed${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.LockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="lockIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="SelectSeed${followableName}FeedFromDbHandler" class="com.rapidbackend.socialutil.process.handler.db.SelectMultipleDbRecordsHandler">
    <property name="dao" ref="${followableName}feedcontentDao"></property>
    <property name="dBQueryIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="yield" value="seedFeeds"></property><!-- be carefull should not overwrite 'feeds' result -->
    <property name="grab" value="feeds"></property>
</bean>
<bean  id="UpdateSeed${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="dBQueryIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="grab" value="feeds"></property>
    <property name="modelClassName" value="${followableName}feedcontent"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="UnLockSeed${followableName}FeedCacheHandler" class="com.rapidbackend.core.process.handler.cache.UnlockCacheHandler">
    <property name="redisCache" ref="FeedCache"></property>
    <property name="unlockIdListName" value="seedFeedIdInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<bean  id="GetAllFeedUserIdHandler" class="com.rapidbackend.socialutil.process.handler.merge.GetAllFeedUserIdHandler">
    <property name="grab" value="feeds"></property>
    <property name="yield" value="uids"></property>
</bean>
<bean  id="ReadUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.ReadCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="idListParamName" value="uids"></property>
    <property name="dBQueryIdListName" value="userIdsInDbQuery"></property>
    <property name="yield" value="users"></property>
    <property name="modelClassName" value="user"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="LockUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.LockCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="lockIdListName" value="userIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>
<bean  id="SelectUserFromDbHandler" class="com.rapidbackend.socialutil.process.handler.db.SelectMultipleDbRecordsHandler">
    <property name="dao" ref="UserDao"></property>
    <property name="dBQueryIdListName" value="userIdsInDbQuery"></property>
    <property name="yield" value="users"></property>
    <property name="grab" value="users"></property>
</bean>
<bean  id="UpdateUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.UpdateCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="dBQueryIdListName" value="userIdsInDbQuery"></property>
    <property name="grab" value="users"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
    <property name="modelClassName" value="user"></property>
</bean>
<bean  id="UnLockUserCacheHandler" class="com.rapidbackend.core.process.handler.cache.UnlockCacheHandler">
    <property name="redisCache" ref="UserCache"></property>
    <property name="unlockIdListName" value="userIdsInDbQuery"></property>
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<bean  id="Merge${followableName}FeedResultHandler" class="com.rapidbackend.socialutil.process.handler.merge.MergeFeedResultHandler">
    <property name="idListParamName" value="fids"></property><!-- input id list name -->
    <property name="modelTypeFinder" ref="SocialUtilModelTypeFinder"></property>
</bean>

<!-- handlers END -->
<!-- GetFeeds END -->


<bean id="${followableName}FeedCommentCounterConf"
        class="com.rapidbackend.core.process.handler.counter.CounterConfig">
        <property name="counterKeyPrefix" value="${followableName}FeedComment"></property>
        <property name="redisCounterTarget" value="metadataCounter"></property>
</bean>
<bean id="${followableName}FeedRepostCounterConf"
        class="com.rapidbackend.core.process.handler.counter.CounterConfig">
        <property name="counterKeyPrefix" value="${followableName}FeedRepost"></property>
        <property name="redisCounterTarget" value="metadataCounter"></property>
</bean>

</beans>